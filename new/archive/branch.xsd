<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2019 rel. 3 sp1 (x64) (http://www.altova.com) by Simone Gasperoni (OP Publications Office of the European Union) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<xs:include schemaLocation="./common.xsd"/>
	<xs:element name="NOTICE">
		<xs:annotation>
			<xs:documentation>This Notice schema is: Branch notice, it reuses other schemas defined in common.xsd. In this kind of notice, there are: 1 WORK, 1 EXPRESSION (display), 0 or more EXPRESSIONs (non-display), 0 or more MANIFESTATIONs, 0 or more ITEMs</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:element name="WORK">
					<xs:complexType>
						<xs:sequence>
							<xs:group ref="Identifier_with_URI_mandatory">
								<xs:annotation>
									<xs:documentation>The resource identifiers</xs:documentation>
								</xs:annotation>
							</xs:group>
							<xs:element ref="TYPE" maxOccurs="unbounded"/>
							<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="EXPRESSION" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
											<xs:group ref="Identifier_with_URI_mandatory">
											<xs:annotation>
												<xs:documentation>The resource identifiers</xs:documentation>
											</xs:annotation>
										</xs:group>
										<xs:element ref="TYPE" minOccurs="0" maxOccurs="unbounded"/>
										<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
										<xs:element name="MANIFESTATION" minOccurs="0" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:group ref="Identifier_with_URI_mandatory">
														<xs:annotation>
															<xs:documentation>The resource identifiers</xs:documentation>
														</xs:annotation>
													</xs:group>
													<xs:element ref="TYPE" minOccurs="0" maxOccurs="unbounded"/>
													<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
													<xs:element name="ITEM" minOccurs="0" maxOccurs="unbounded">
														<xs:complexType>
															<xs:sequence>
																<xs:group ref="Identifier_with_URI_mandatory">
																	<xs:annotation>
																		<xs:documentation>The resource identifiers</xs:documentation>
																	</xs:annotation>
																</xs:group>
																<xs:element ref="TYPE" minOccurs="0" maxOccurs="unbounded"/>
																<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
																<xs:element ref="TECHMD" minOccurs="0"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:assert test="if (boolean(TYPE[@type='type'])) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
												<xs:assert test="if (boolean(p_name_literal)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
												<xs:assert test="if (boolean(p_name_date)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
												<xs:assert test="if (boolean(p_name_concept)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
												<xs:assert test="if (boolean(p_name_concept_hierarchy)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
												<xs:assert test="if (boolean(p_name_rel)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute ref="display" use="required"/>
									<xs:assert test="if (boolean(TYPE[@type='type'])) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
									<xs:assert test="if (boolean(p_name_literal)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
									<xs:assert test="if (boolean(p_name_date)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
									<xs:assert test="if (boolean(p_name_concept)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
									<xs:assert test="if (boolean(p_name_concept_hierarchy)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
									<xs:assert test="if (boolean(p_name_rel)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:assert test="if (boolean(TYPE[@type='type'])) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
						<xs:assert test="if (boolean(p_name_literal)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
						<xs:assert test="if (boolean(p_name_date)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
						<xs:assert test="if (boolean(p_name_concept)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
						<xs:assert test="if (boolean(p_name_concept_hierarchy)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
						<xs:assert test="if (boolean(p_name_rel)) then (boolean(URI)) else true()" xpathDefaultNamespace="##targetNamespace"/>
						<xs:assert test="count(EXPRESSION[@display='true']) = 1" xpathDefaultNamespace="##targetNamespace"/>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="type" use="required" fixed="branch">
				<xs:annotation>
					<xs:documentation xml:lang="en">The type of notice. Possible values are enumerated in this schema.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="branch"/>
						<!-- [TBD - removal of indentifier notice] -->
						<!-- xs:enumeration value="identifier"/ -->
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="decoding" use="required">
				<xs:annotation>
					<xs:documentation xml:lang="en">Decoding language used to build the notice. The language is provided using the ISO 639.2 code (terminology)</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
</xs:schema>
