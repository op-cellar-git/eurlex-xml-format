<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2019 rel. 3 sp1 (x64) (http://www.altova.com) by Simone Gasperoni (OP Publications Office of the European Union) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation xml:lang="en">This is not an XML schema. Rather it is an XML-schema template which is filled in depending the properties defined by the CDM and TDM ontology (http://publications.europa.eu/ontology/cdm# and http://publications.europa.eu/ontology/tdm). In this specification, element names (or name parts) in UPPER CASE are definite (fixed).  The lower case parts are dynamic. Also note: The order of child elements typically is NOT fixed. This schema will be reused by the more specific ones for describing particulars notices.</xs:documentation>
	</xs:annotation>
	<xs:element name="OBJECT">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="URI" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="in" type="xs:anyURI" use="required">
				<xs:annotation>
					<xs:documentation xml:lang="en">The URI given on input.
The list of alternative identifiers for this URI are requested.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="embargo-date" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation xml:lang="en">On occasional embargo date-time set on the identified object.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="types">
		<xs:annotation>
			<xs:documentation xml:lang="en">Implements cellar-76</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="date"/>
			<xs:enumeration value="concept_hierarchical"/>
			<xs:enumeration value="concept"/>
			<xs:enumeration value="data"/>
			<xs:enumeration value="memberlist"/>
			<xs:enumeration value="link"/>
			<xs:enumeration value="embedded_link"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attribute name="type" type="types">
		<xs:annotation>
			<xs:documentation>Determines the content model (structure) of the element.</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:group name="property">
		<xs:annotation>
			<xs:documentation xml:lang="en">groups all properties that can be used in a notice.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="p_name_literal">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_date">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_concept">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_nested"/>
			<xs:element ref="p_name.MEMBERLIST">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute of the sub-elements.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_rel">
				<xs:annotation>
					<xs:documentation>A relation to a related content object.  
e.g. an object (WORK, DOSSIER, AGENT) that is not a skos:Concept. Inverse relations are included

The name of the element is dynamic and is replaced by the metadata property name. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="item-property">
		<xs:annotation>
			<xs:documentation xml:lang="en">groups all properties that can be used in a notice for an item element.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="p_name_literal">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_date">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_item_rel"/>
		</xs:choice>
	</xs:group>
	<xs:group name="embedded-property">
		<xs:annotation>
			<xs:documentation xml:lang="en">groups all properties that can be used in an embedded notice.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="p_name_literal">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_date">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_concept">
				<xs:annotation>
					<xs:documentation>The name of the element is dynamic, this is not a real element name.
The structure is set by the @type attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="p_name_nested"/>
			<xs:element ref="p_name_embedded_rel">
				<xs:annotation>
					<xs:documentation xml:lang="en">An embedded relation cannot be extended anymore.
It just gives the the identifiers of the target and occasional annotations on the link.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:complexType name="Literal">
		<xs:sequence>
			<xs:element name="VALUE" type="xs:anyType">
				<xs:annotation>
					<xs:documentation xml:lang="en">literal value, except when ../@mdtypes='XMLLiteral'

To date, no XMLLiteral type values are defined.
In case such value ranges would be introduced, the 'any' type attribute will be set.
PO/Metaconv would need to make its type definition syntax available.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="annotation_property" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>annotation_property is a dynamic assigned name (derived from the cdm ontology).
it's value is a string value.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute ref="type" use="required" fixed="data">
			<xs:annotation>
				<xs:documentation xml:lang="en">fixed value = 'data'</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="p_name_literal" type="Literal">
		<xs:annotation>
			<xs:documentation xml:lang="en">A property that takes a literal value.

The name of the element is dynamic and is replaced by the metadata property name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="Date">
		<xs:sequence>
			<xs:element name="VALUE" type="xs:date">
				<xs:annotation>
					<xs:documentation>Special values are used for unknown dates
- 9999-12-31
- 0001-01-01</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="YEAR" type="xs:gYear">
				<xs:annotation>
					<xs:documentation xml:lang="en">YYYY</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MONTH">
				<xs:annotation>
					<xs:documentation xml:lang="en">format = MM</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:minInclusive value="1"/>
						<xs:maxInclusive value="12"/>
						<xs:totalDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DAY">
				<xs:annotation>
					<xs:documentation xml:lang="en">format = DD</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:minInclusive value="1"/>
						<xs:maxInclusive value="31"/>
						<xs:totalDigits value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="annotation_property" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>annotation_property is a dynamic assigned name (derived from the cdm ontology).
it's value is a string value.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute ref="type" use="required" fixed="date">
			<xs:annotation>
				<xs:documentation xml:lang="en">fixed value = "date"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="p_name_date" type="Date">
		<xs:annotation>
			<xs:documentation xml:lang="en">A property with a date range value.

The name of the element is dynamic and is replaced by the metadata property name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="Concept">
		<xs:sequence>
			<xs:element ref="URI"/>
			<xs:element name="IDENTIFIER">
				<xs:annotation>
					<xs:documentation>The dc:identifier of the concept (language independent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PREFLABEL">
				<xs:annotation>
					<xs:documentation>The preferred label of the classifying concept.
The value may be empty if the label is not available in the decoding language of the NOTICE.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FALLBACK" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If the concept has no PREFLABEL value in the required decoding language, a fallback is given in an alternate (configurable) language.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="PREFLABEL">
							<xs:annotation>
								<xs:documentation>The language variant of the PREFLABEL</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LANG">
							<xs:annotation>
								<xs:documentation>The selected best match to provide a language variant of the PREFLABEL.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="ALTLABEL" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A synonym for the PREFLABEL

Actually occurs 0 or more times.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OP-CODE" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">There can be 0 or 1 OP-CODE element.

Implements cellar-107</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="annotation_property" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>annotation_property is a dynamic assigned name (derived from the cdm ontology).
it's value is a string value.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="p_name_concept">
		<xs:annotation>
			<xs:documentation xml:lang="en">The metadata property with a (decoded) controlled vocabulary value.

The name of the element is dynamic and is replaced by the metadata property name.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="Concept">
					<xs:attribute ref="type" use="required" fixed="concept"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="Level">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">the order of the child elements is arbitrary.</xs:documentation>
			</xs:annotation>
			<xs:element name="p_name_nested" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">The prefix 'p_name' is dynamic and takes the value of the classifying property name</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="Concept">
							<xs:attribute ref="path" use="required"/>
							<xs:attribute ref="level" use="required"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute ref="type" use="required" fixed="concept_hierarchical"/>
	</xs:complexType>
	<xs:element name="p_name_nested" type="Level">
		<xs:annotation>
			<xs:documentation xml:lang="en">The child elements are hierarchically related properties.
</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="Memberlist">
		<xs:annotation>
			<xs:documentation>Cellar-21, 22, 23</xs:documentation>
		</xs:annotation>
		<xs:choice maxOccurs="unbounded">
			<xs:element ref="p_name_concept"/>
			<xs:element ref="p_name_nested"/>
			<xs:element name="NESTEDLIST" type="Memberlist">
				<xs:annotation>
					<xs:documentation xml:lang="en">A nested memberlist group.
A NESTEDLIST defines a subgroup of classifying properties or other NESTEDLIST sub-groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute ref="type" use="required" fixed="memberlist">
			<xs:annotation>
				<xs:documentation xml:lang="en">fixed value 'memberlist'</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="p_name.MEMBERLIST" type="Memberlist">
		<xs:annotation>
			<xs:documentation xml:lang="en">This structure also captures a grouped layout of classifying statements on a subject.

The 'p_name' prefix is a dynamic name.  It is the name of the properties being grouped.  The .MEMBERLIST suffix is fixed.
A memberlist can have a nested structure (NESTEDLIST element) as well as references to classification properties.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:group name="Identifier">
		<xs:annotation>
			<xs:documentation>On request of AHRS, no Jira issue made</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">The URI child element is optional.
If present it must be the CELLAR URI.</xs:documentation>
			</xs:annotation>
			<xs:element ref="URI" minOccurs="0"/>
			<xs:element ref="SAMEAS" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="URI">
		<xs:annotation>
			<xs:documentation xml:lang="en">TYPE and IDENTIFIER are optional in case the URI is not according a known identifier format.  (see comment on TYPE)</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="VALUE">
				<xs:annotation>
					<xs:documentation xml:lang="en">The full URI value</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TYPE" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The URI type, according to the cellar resource URI convention.
- Eurovoc concept references has URI prefix: 'http://eurovoc.europa.eu/
  The TYPE is EUROVOC
- NAL resources start with a base URI that ends with resource/authority/
  The next segment in the URI is the TYPE value
- Other content and metadata documents have a URI ending with resource/
  The next segment (not equal to 'authority') holds the TYPE

The value is percent decoded (URI %-decoding rules).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IDENTIFIER" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The remainder of the URI, following the TYPE segment.

The value is percent decoded (URI %-decoding rules).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:element name="URI" type="URI">
		<xs:annotation>
			<xs:documentation>URI is a reserved name and may not occur as property name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SAMEAS">
		<xs:annotation>
			<xs:documentation>SAMEAS is a reserved name and may not occur as property name.
The contained URI is a Production System (PS) URI</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="URI"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="Relation">
		<xs:annotation>
			<xs:documentation>Cellar-94</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">Order sub-elements is not important</xs:documentation>
			</xs:annotation>
			<xs:group ref="Identifier">
				<xs:annotation>
					<xs:documentation xml:lang="en">The ideintifier of the link target</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:element name="annotation_property" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>annotation_property is a dynamic assigned name (derived from the cdm ontology).
it's value is a string value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="WORK">
					<xs:complexType>
						<xs:sequence>
							<xs:group ref="embedded-property" maxOccurs="unbounded"/>
							<xs:element name="EXPRESSION" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="en">EXPRESSION is required in case the expanding property has range expression.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:group ref="embedded-property" maxOccurs="unbounded"/>
										<xs:element name="MANIFESTATION" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation xml:lang="en">only used if there is a parent expression.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:group ref="embedded-property" maxOccurs="unbounded"/>
													<xs:element ref="MANIFESTATION_HAS_ITEM"/>
												</xs:sequence>
												<xs:attribute ref="manifestation-type"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="DOSSIER">
					<xs:complexType>
						<xs:sequence>
							<xs:group ref="embedded-property" maxOccurs="unbounded"/>
							<xs:element name="EVENT" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:group ref="embedded-property" maxOccurs="unbounded"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="AGENT">
					<xs:complexType>
						<xs:group ref="embedded-property" maxOccurs="unbounded"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="EVENT">
					<xs:complexType>
						<xs:group ref="embedded-property" maxOccurs="unbounded"/>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute ref="type" fixed="link">
			<xs:annotation>
				<xs:documentation xml:lang="en">fixed value = 'link'</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="p_name_rel" type="Relation">
		<xs:annotation>
			<xs:documentation xml:lang="en">A relation to a related content object.  
I.e. an object (WORK, DOSSIER, AGENT) that is not a skos:Concept.

The name of the element is dynamic and is replaced by the metadata property name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ItemRelation">
		<xs:annotation>
			<xs:documentation>Cellar-94</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">Order sub-elements is not important</xs:documentation>
			</xs:annotation>
			<xs:group ref="Identifier">
				<xs:annotation>
					<xs:documentation xml:lang="en">The ideintifier of the link target</xs:documentation>
				</xs:annotation>
			</xs:group>
		</xs:sequence>
		<xs:attribute ref="type" fixed="link">
			<xs:annotation>
				<xs:documentation xml:lang="en">fixed value = 'link'</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="p_name_item_rel" type="ItemRelation">
		<xs:annotation>
			<xs:documentation xml:lang="en">A relation to a related content object of an ITEM

The name of the element is dynamic and is replaced by the metadata property name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="EmbeddedRelation">
		<xs:annotation>
			<xs:documentation>Cellar-94</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">Order sub-elements is not important</xs:documentation>
			</xs:annotation>
			<xs:group ref="Identifier">
				<xs:annotation>
					<xs:documentation xml:lang="en">The ideintifier of the link target</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:element name="annotation_property" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute ref="type" use="required" fixed="embedded_link">
			<xs:annotation>
				<xs:documentation xml:lang="en">embedded_link</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="p_name_embedded_rel" type="EmbeddedRelation">
		<xs:annotation>
			<xs:documentation xml:lang="en">In an embedded notice, a relation to a related content object.  
I.e. an object (WORK, DOSSIER, AGENT) that is not skos:Concept.

The name of the element is dynamic and is replaced by the metadata property name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:group name="t_property">
		<xs:annotation>
			<xs:documentation xml:lang="en">technical metadata property

The name of the element is dynamic and is replaced by the metadata property name.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="p_name_literal"/>
		</xs:choice>
	</xs:group>
	<xs:element name="TECHMD">
		<xs:annotation>
			<xs:documentation>TECHMD is a reserved name and may not occur as property name.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="t_property" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="WORK_HAS_EXPRESSIONType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Implements cellar-66 and cellar-110</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="Identifier"/>
			<xs:element name="WORK">
				<xs:complexType>
					<xs:sequence>
						<xs:group ref="embedded-property" maxOccurs="unbounded"/>
						<xs:element name="EXPRESSION" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation xml:lang="en">EXPRESSION is required in case the expanding property has range expression.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:group ref="embedded-property" maxOccurs="unbounded"/>
									<xs:element name="MANIFESTATION" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation xml:lang="en">only used if there is a parent expression.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:group ref="embedded-property" maxOccurs="unbounded"/>
												<xs:element ref="MANIFESTATION_HAS_ITEM"/>
											</xs:sequence>
											<xs:attribute ref="manifestation-type"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attribute name="manifestation-type">
		<xs:annotation>
			<xs:documentation>A dynamic list of values of manifestation types (if provided).
Typical values are:
doc
docx
epub
fmx2
fmx3
fmx4
html
jpeg
pdf1x
pdfa1a
pdfa1b
pdfx
ppsx
ppt
pptx
rdf
rtf
sgml
tiff
txt
xhtml
xls
xlsx
xml
zip
(and more ..)</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:complexType name="ITEMType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">Order of sub-element is not relevant</xs:documentation>
			</xs:annotation>
			<xs:group ref="Identifier">
				<xs:annotation>
					<xs:documentation>The manifestation identifiers</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="TECHMD" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ITEMObjectType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">Order of sub-element is not relevant</xs:documentation>
			</xs:annotation>
			<xs:group ref="Identifier">
				<xs:annotation>
					<xs:documentation>The manifestation identifiers</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="TECHMD" minOccurs="0"/>
			<xs:element name="ITEM_BELONGS_TO_MANIFESTATION">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">Order of sub-element is not relevant</xs:documentation>
					</xs:annotation>
					<xs:group ref="Identifier">
						<xs:annotation>
							<xs:documentation>The manifestation identifiers</xs:documentation>
						</xs:annotation>
					</xs:group>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MANIFESTATIONType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">Order of sub-element is not relevant</xs:documentation>
			</xs:annotation>
			<xs:group ref="Identifier">
				<xs:annotation>
					<xs:documentation>The manifestation identifiers</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute ref="manifestation-type" use="prohibited"/>
	</xs:complexType>
	<xs:complexType name="MANIFESTATIONObjectType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation xml:lang="en">Order of sub-element is not relevant</xs:documentation>
			</xs:annotation>
			<xs:group ref="Identifier">
				<xs:annotation>
					<xs:documentation>The manifestation identifiers</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="MANIFESTATION_MANIFESTS_EXPRESSION">
				<xs:complexType>
					<xs:sequence>
						<xs:annotation>
							<xs:documentation xml:lang="en">Order of sub-element is not relevant</xs:documentation>
						</xs:annotation>
						<xs:group ref="Identifier">
							<xs:annotation>
								<xs:documentation>The manifestation identifiers</xs:documentation>
							</xs:annotation>
						</xs:group>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="MANIFESTATION_HAS_ITEM" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute ref="manifestation-type" use="prohibited"/>
	</xs:complexType>
	<xs:complexType name="MANIFESTATION_typeType">
		<xs:complexContent>
			<xs:extension base="MANIFESTATIONType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="MANIFESTATION_HAS_ITEM" type="ITEMType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Captures ITEM information under a manifestation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:attribute name="display"/>
	<xs:attribute name="leaf" type="xs:boolean">
		<xs:annotation>
			<xs:documentation xml:lang="en">fixed value = 'concept'</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:attribute name="path" type="xs:integer"/>
	<xs:attribute name="level" type="xs:integer"/>
</xs:schema>
