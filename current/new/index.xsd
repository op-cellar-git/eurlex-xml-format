<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2019 rel. 3 sp1 (http://www.altova.com) by DG OP (OP Publications Office of the European Union) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation xml:lang="en">This is not an XML schema
Rather it is an XML-schema template which is filled in depending the properties defined by the CDM and TDM ontology (http://publications.europa.eu/ontology/cdm# and http://publications.europa.eu/ontology/tdm).

In this specification, element names (or name parts) in UPPER CASE are definite (fixed).  The lower case parts are dynamic.

Also note: The order of child elements typically is NOT fixed.</xs:documentation>
	</xs:annotation>
	<xs:include schemaLocation="./common.xsd"/>
	<xs:element name="NOTICE">
		<xs:annotation>
			<xs:documentation>The notice is an aggregation depending on the value of @type.
</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:element name="WORK">
					<xs:annotation>
						<xs:documentation xml:lang="en">Work wrapper as used in Tree, Branch, Object and Indexation notices. In Object notice there is 
- either 1 WORK
- either 1 EXPRESSION
- either 1 MANIFESTATION
- or 1 ITEM
In Branch notice there is 
- 1 WORK
- 1 EXPRESSION (display)
- 0 or more EXPRESSIONs (non-display)
- 0 or more MANIFESTATIONs
- 0 or more ITEMs
In Tree notice there is
- 1 WORK
- 1 or more EXPRESSIONs
- 0 or more MANIFESTATIONs
- 0 or more ITEMs
In Indexation notice there is [TBD]
- 1 WORK
- 0 or more EXPRESSIONs
- 0 or more MANIFESTATIONs
- 0 or more ITEMs
</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:annotation>
								<xs:documentation xml:lang="en">The order of the sub-elements is not relevant</xs:documentation>
							</xs:annotation>
							<xs:group ref="Identifier">
								<xs:annotation>
									<xs:documentation>The identifiers of the work.</xs:documentation>
								</xs:annotation>
							</xs:group>
							<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="WORK_HAS_EXPRESSION" type="WORK_HAS_EXPRESSIONType" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="en">[TBD - keep this elements] Implements cellar-66 and cellar-110</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="EXPRESSION" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="en">Expression wrapper as used in Tree, Branch and Object notice.

For /NOTICE[type="indexing"],
expression may be a fallback (see cellar 108)
This can be detected because the expression language does not match the NOTICE decoding language.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:annotation>
											<xs:documentation xml:lang="en">The order of the sub-elements is not relevant</xs:documentation>
										</xs:annotation>
										<xs:group ref="Identifier">
											<xs:annotation>
												<xs:documentation>The expression identifiers</xs:documentation>
											</xs:annotation>
										</xs:group>
										<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
										<xs:element name="EXPRESSION_BELONGS_TO_WORK">
											<xs:annotation>
												<xs:documentation>[TBD - keep this element]</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:group ref="Identifier"/>
											</xs:complexType>
										</xs:element>
										<xs:element name="EXPRESSION_MANIFESTED_BY_MANIFESTATION" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>[TBD - keep this element]</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:group ref="Identifier"/>
											</xs:complexType>
										</xs:element>
										<xs:choice minOccurs="0" maxOccurs="unbounded">
											<xs:element name="MANIFESTATION" type="MANIFESTATIONType">
												<xs:annotation>
													<xs:documentation xml:lang="en">Manifestation wrapper as used in Tree, Branch and Object notice.</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="MANIFESTATION_type" type="MANIFESTATION_typeType">
												<xs:annotation>
													<xs:documentation xml:lang="en">[TBD - clarify role of this element] _type := the manifestation type
Only used in indexing notice
Only provided is available

MANIFESTATION_type is derived from the type of MANIFESTATION</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:choice>
									</xs:sequence>
									<xs:attribute ref="display"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="DOSSIER">
					<xs:annotation>
						<xs:documentation>
								Different combinations can be used or
- tree notice of Dossier (one dossier, multiple events)
- object notice of either one Dossier or one Event
- indexing notice Dossier (one dosier all event) or Event (one event and its dossier)
							</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:annotation>
								<xs:documentation xml:lang="en">The order of the sub-elements is not relevant</xs:documentation>
							</xs:annotation>
							<xs:group ref="Identifier"/>
							<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="DOSSIER_CONTAINS_EVENT_LEGAL" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:group ref="Identifier"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="EVENT" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:annotation>
											<xs:documentation xml:lang="en">The order of the sub-elements is not relevant</xs:documentation>
										</xs:annotation>
										<xs:group ref="Identifier"/>
										<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
										<xs:element name="EVENT_LEGAL_PART_OF_DOSSIER" minOccurs="0">
											<xs:complexType>
												<xs:group ref="Identifier"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="AGENT">
					<xs:annotation>
						<xs:documentation xml:lang="en">Agent wrapper as used in Indexing, Tree, Branch and Object notice.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:group ref="Identifier"/>
							<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EVENT">
					<xs:annotation>
						<xs:documentation xml:lang="en">[TBD - Does Cellar support indexing notices for events?] Event wrapper as used in Indexing, Tree, Branch and Object notice.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:annotation>
								<xs:documentation xml:lang="en">The order of the sub-elements is not relevant</xs:documentation>
							</xs:annotation>
							<xs:group ref="Identifier"/>
							<xs:group ref="property" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="EVENT_LEGAL_PART_OF_DOSSIER" minOccurs="0">
								<xs:complexType>
									<xs:group ref="Identifier"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="type" use="required">
				<xs:annotation>
					<xs:documentation xml:lang="en">The type of notice.
Possible values are enumerated in this schema.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="indexing"/>
						<xs:enumeration value="object"/>
						<xs:enumeration value="tree"/>
						<xs:enumeration value="branch"/>
						<!-- [TBD - removal of indentifier notice] -->
						<!-- xs:enumeration value="identifier"/ -->
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="decoding">
				<xs:annotation>
					<xs:documentation xml:lang="en">Decoding language used to build the notice.
Not provided on identifier notice.
The language is provided using the ISO 639.2 code (terminology)</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
</xs:schema>
